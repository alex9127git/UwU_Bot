import csv
import sys

import discord
import random
from os import environ, path
from dotenv import load_dotenv
from datetime import datetime, timezone

load_dotenv(dotenv_path="config.env")
token = environ["TOKEN"]

intents = discord.Intents.all()
client = discord.Client(intents=intents)

triggers = []
triggerID = 0
stats_total = []


def load_triggers():
    global triggers
    try:
        with open("triggers.csv", "r", encoding="utf8") as file:
            reader = csv.DictReader(file, delimiter=';', quotechar='"')
            triggers = list(reader)
    except FileNotFoundError:
        print("Error: Triggers file not found")
        sys.exit(1)


def update_triggers():
    with open("triggers.csv", "w", newline='', encoding="utf8") as file:
        writer = csv.DictWriter(file, fieldnames=["id", "triggerType", "triggerText",
                                                  "triggerReaction"],
                                delimiter=";", quotechar='"', quoting=csv.QUOTE_MINIMAL)
        writer.writeheader()
        writer.writerows(triggers)


def regenerate_stats_file():
    with open("stats_total.csv", "w", newline='', encoding="utf8") as file:
        writer = csv.DictWriter(file, fieldnames=["uid", "totalMessages", "totalSymbols",
                                                  "dailyMessages", "dailySymbols", "lastUpdate",
                                                  "lastActive", "description", "awards"],
                                delimiter=";", quotechar='"', quoting=csv.QUOTE_MINIMAL)
        writer.writeheader()
        writer.writerows(
            list(map(
                lambda member: {"uid": member.id, "totalMessages": 0, "totalSymbols": 0,
                                "dailyMessages": 0, "dailySymbols": 0,
                                "lastUpdate": datetime.now(),
                                "lastActive": datetime.now(),
                                "description": "", "awards": ""},
                members_list
            ))
        )


def load_stats():
    global stats_total, members_list
    if not path.isfile("stats_total.csv"):
        print("Stats file doesn't exist, regenerating...")
        regenerate_stats_file()
    with open("stats_total.csv", "r", encoding="utf8") as file:
        reader = csv.DictReader(file, delimiter=';', quotechar='"')
        stats_total = list(reader)
        records = list(map(lambda record: int(record["uid"]), stats_total))
        ids = list(map(lambda member: member.id, members_list))
        if records != ids:
            deleted_ids = set(records) - set(ids)
            for uid in deleted_ids:
                for record in stats_total:
                    if int(record["uid"]) == uid:
                        stats_total.remove(record)
        update_stats()


def update_stats():
    with open("stats_total.csv", "w", newline='', encoding="utf8") as file:
        writer = csv.DictWriter(file, fieldnames=["uid", "totalMessages", "totalSymbols",
                                                  "dailyMessages", "dailySymbols", "lastUpdate",
                                                  "lastActive", "description", "awards"],
                                delimiter=";", quotechar='"', quoting=csv.QUOTE_MINIMAL)
        writer.writeheader()
        writer.writerows(stats_total)


def getRecordIndex(uid):
    for i in range(len(stats_total)):
        if stats_total[i]["uid"] == str(uid):
            return i
    return -1


async def send_bio(channel, member):
    role_names = map(lambda role: role.name, member.roles)
    description = stats_total[getRecordIndex(member.id)]['description']
    rewards = stats_total[getRecordIndex(member.id)]['awards']
    await channel.send(
        f"–ù–∏–∫: {member.nick if member.nick else member.name}\n" +
        f"–†–æ–ª–∏: {', '.join(list(filter(lambda name: name != '@everyone', role_names))[::-1])}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ:\n{description.strip() if description.strip() else '<–ü—É—Å—Ç–æ>'}\n" +
        f"–ù–∞–≥—Ä–∞–¥—ã:\n{rewards if rewards else '–ù–∞–≥—Ä–∞–¥ –Ω–µ—Ç'}"
    )


async def send_stats(channel, member):
    index = getRecordIndex(member.id)
    total_messages = stats_total[index]["totalMessages"]
    total_symbols = stats_total[index]["totalSymbols"]
    daily_messages = stats_total[index]["dailyMessages"]
    daily_symbols = stats_total[index]["dailySymbols"]
    lastActive = datetime.strptime(
        str(stats_total[index]["lastActive"]), "%Y-%m-%d %H:%M:%S.%f")
    await channel.send(
        f"–ù–∏–∫: {member.nick if member.nick else member.name}\n" +
        f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}\n" +
        f"–í—Å–µ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤: {total_symbols}\n" +
        f"–°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {daily_messages}\n"
        f"–°–∏–º–≤–æ–ª–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {daily_symbols}\n"
        f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {lastActive.date()} –≤ {lastActive.time()}\n"
    )


async def recount_stats(gld, message):
    msg_text = str(message.content)
    symbols = len(msg_text)
    user_index = getRecordIndex(message.author.id)
    if not list(filter(lambda r: int(r["uid"]) == message.author.id, stats_total)):
        stats_total.append({
            "uid": str(message.author.id),
            "totalMessages": "0",
            "totalSymbols": "0",
            "dailyMessages": "0",
            "dailySymbols": "0",
            "lastUpdate": datetime.now(),
            "lastActive": datetime.now(),
            "description": "",
            "awards": ""
        })
        stats_total.sort(key=lambda r: int(r["uid"]))
    totalSymbols = int(stats_total[user_index]["totalSymbols"])
    stats_total[user_index]["totalSymbols"] = totalSymbols + symbols
    totalMessages = int(stats_total[user_index]["totalMessages"])
    stats_total[user_index]["totalMessages"] = totalMessages + 1
    moment = datetime.now()
    for record in range(len(stats_total)):
        stats_total[record]["lastUpdate"] = moment
        lastActive = datetime.strptime(
            str(stats_total[record]["lastActive"]), "%Y-%m-%d %H:%M:%S.%f")
        member = members_list[record]
        if (moment - lastActive).days >= 3:
            if discord.utils.get(member.roles, name="–ü–∞—Å—Å–∏–≤") is None:
                await member.add_roles(discord.utils.get(gld.roles, name="–ü–∞—Å—Å–∏–≤"))
                await member.remove_roles(discord.utils.get(gld.roles, name="–ê–∫—Ç–∏–≤"))
        if lastActive.date() != moment.date():
            stats_total[record]["dailyMessages"] = 0
            stats_total[record]["dailySymbols"] = 0
    stats_total[user_index]["lastActive"] = moment
    dailySymbols = int(stats_total[user_index]["dailySymbols"])
    stats_total[user_index]["dailySymbols"] = dailySymbols + symbols
    dailyMessages = int(stats_total[user_index]["dailyMessages"])
    stats_total[user_index]["dailyMessages"] = dailyMessages + 1


@client.event
async def on_ready():
    global triggers, triggerID, members_list, guild, text_category, voice_category
    guild = client.get_guild(1030498911586091019)
    members_list = sorted(filter(
        lambda member: member.bot is False, guild.members
    ), key=lambda member: member.id)
    text_category = discord.utils.get(guild.categories, name="–¢–ï–ö–°–¢")
    voice_category = discord.utils.get(guild.categories, name="–ì–û–õ–û–°–û–í–´–ï")
    print("Loading triggers...")
    load_triggers()
    print("Loading stats...")
    load_stats()
    triggerID = max(map(lambda x: int(x["id"]), triggers)) if triggers else -1
    print(f'Logged in: {client.user}')


@client.event
async def on_message(message):
    global triggers, triggerID, guild, members_list, text_category, voice_category
    
    members_list = sorted(filter(
        lambda member: member.bot is False, guild.members
    ), key=lambda member: member.id)

    if message.author == client.user:
        return

    msg_text = str(message.content)
    await recount_stats(guild, message)
    update_stats()

    for channel in text_category.channels:
        if channel.name.startswith("üîê"):
            last_activity = channel.last_message.created_at if channel.last_message \
                else channel.created_at
            if (datetime.now(timezone.utc) - last_activity).days >= 1:
                try:
                    await channel.delete()
                except discord.Forbidden:
                    pass
    for channel in voice_category.channels:
        if channel.name.startswith("üîê"):
            last_activity = channel.last_message.created_at if channel.last_message \
                else channel.created_at
            if (datetime.now(timezone.utc) - last_activity).days >= 1:
                try:
                    await channel.delete()
                except discord.Forbidden:
                    pass

    if msg_text.lower() == "ping":
        await message.channel.send(
            'pong' if random.randint(1, 5) < 5 else "–≤ –∂–æ–ø—É —Å–µ–±–µ —Å–≤–æ–π ping –∑–∞—Å—É–Ω—å"
        )
    elif msg_text.lower() == "–ø–∏–Ω–≥":
        await message.channel.send(
            '–ø–æ–Ω–≥' if random.randint(1, 5) < 5 else "–≤ –∂–æ–ø—É —Å–µ–±–µ —Å–≤–æ–π –ø–∏–Ω–≥ –∑–∞—Å—É–Ω—å"
        )
    elif msg_text.lower() == "help":
        await message.channel.send(
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
            "ping –∏–ª–∏ –ø–∏–Ω–≥ - –æ—Ç–≤–µ—á–∞–µ—Ç pong –∏–ª–∏ –ø–æ–Ω–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞\n\n" +
            "–ö–æ–º–∞–Ω–¥—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:\n" +
            "trigger add - –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä\n" +
            "trigger change - –∏–∑–º–µ–Ω—è–µ—Ç –æ–¥–Ω–æ –∏–∑ –ø–æ–ª–µ–π –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ\n" +
            "trigger delete - —É–¥–∞–ª—è–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –ø–æ ID\n" +
            "trigger list - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–π–ª —Å —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –µ–≥–æ –≤ –∫–∞–Ω–∞–ª\n\n" +
            "–ö–æ–º–∞–Ω–¥—ã –±–∏–æ–≥—Ä–∞—Ñ–∏–∏:\n" +
            "bio - –≤—ã–≤–æ–¥–∏—Ç —Å–≤–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é\n" +
            "bio @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—ã–≤–æ–¥–∏—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏—é –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞\n" +
            "bio edit - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏\n" +
            "bio award - –Ω–∞–≥—Ä–∞–¥–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\n" +
            "bio revoke - –æ—Ç–æ–∑–≤–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É\n\n" +
            "–ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n" +
            "stats - –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –∫–æ–º–∞–Ω–¥—É —á–µ–ª–æ–≤–µ–∫–∞\n" +
            "stats @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞\n" +
            "stats all - –≤—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –ª—é–¥–µ–π –≤ —Å–µ—Ä–≤–µ—Ä–µ\n\n" +
            "–ö–æ–º–∞–Ω–¥—ã –ø—Ä–∏–≤–∞—Ç–æ–∫:\n" +
            "tc create <–∏–º—è> - —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª\n" +
            "tc delete - —É–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª\n" +
            "tc permit <–∏–º—è> - —Ä–∞–∑—Ä–µ—à–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫—É –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª\n" +
            "tc kick <–∏–º—è> - –∑–∞–ø—Ä–µ—â–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫—É –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª\n" +
            "–î–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∫–æ–º–∞–Ω–¥—ã —Ç–∞–∫–∏–µ –∂–µ, –Ω–æ –≤–º–µ—Å—Ç–æ tc –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è vc.\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ help –ø–æ—Å–ª–µ –Ω–µ—ë, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, " +
            "–µ—Å–ª–∏ –ø–æ –Ω–µ–π –µ—Å—Ç—å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.\n" +
            "–ù–∞–ø—Ä–∏–º–µ—Ä: trigger add help"
        )
    elif msg_text.lower().startswith("trigger add"):
        message_words = msg_text.lower().split()
        if message_words[2] == "help":
            await message.channel.send(
                "–í–≤–µ–¥–∏—Ç–µ\ntrigger add <—Ç–∏–ø —Ç—Ä–∏–≥–≥–µ—Ä–∞>\n<—Ç–µ–∫—Å—Ç —Ç—Ä–∏–≥–≥–µ—Ä–∞>\n<–æ—Ç–≤–µ—Ç –Ω–∞ —Ç—Ä–∏–≥–≥–µ—Ä>\n " +
                "—á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä –±–æ—Ç–∞. –ë–æ—Ç –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∏ –æ—Ç–≤–µ—á–∞—Ç—å " +
                "–Ω–∞ –Ω–µ–≥–æ.\n–¢–∏–ø—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:\n" +
                "equals - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–º\n" +
                "startswith - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–º\n" +
                "endswith - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–º\n" +
                "contains - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≥–¥–µ —É–≥–æ–¥–Ω–æ.\n" +
                "–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –µ–º—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –µ–≥–æ –º–æ–∂–Ω–æ " +
                "–±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å. ID —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.\n" +
                "–ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ \"@@\", —Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω—è—Ç—å –ª—é–±–æ–µ " +
                "—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –µ—Å–ª–∏ –Ω–µ –∑–∞–º–µ–Ω–∏—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é @@ " +
                "—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º, —Ç—Ä–∏–≥–≥–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç!\n" +
                "–°–æ—á–µ—Ç–∞–Ω–∏–µ @sender –≤ —Ç–µ–∫—Å—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –Ω–∏–∫–Ω–µ–π–º —Ç–æ–≥–æ, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª " +
                "—Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ @recipient - –Ω–∞ —Ç–æ–≥–æ, —á—å—ë —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤–º–µ—Å—Ç–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ " +
                "@@ –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ.\n" +
                "\\n –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.\n"
                "–ï—Å–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ, —è –≤—ã–±–µ—Ä—É –ª—é–±–æ–π –∏–∑ –Ω–∏—Ö –Ω–∞ —Ä–∞–Ω–¥–æ–º."
            )
        else:
            try:
                _, _, trigger_type, *_ = msg_text.split()
                _, trigger_text, trigger_reaction = msg_text.split("\n")
            except ValueError:
                await message.channel.send(
                    "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã")
            else:
                if trigger_type.lower() in ["equals", "startswith", "endswith", "contains"]:
                    trigger = {"id": str(triggerID + 1),
                               "triggerType": trigger_type.lower(),
                               "triggerText": trigger_text.lower().replace("\\n", "\n"),
                               "triggerReaction": trigger_reaction.replace("\\n", "\n")}
                    triggers.append(trigger)
                    triggerID = max(map(lambda x: int(x["id"]), triggers)) if triggers else -1
                    update_triggers()
                    await message.channel.send("–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                else:
                    await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: " +
                                               f"–¢–∏–ø–∞ {trigger_type.lower()} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    elif msg_text.lower().startswith("trigger change"):
        message_words = msg_text.lower().split()
        if message_words[2] == "help":
            await message.channel.send(
                "–í–≤–µ–¥–∏—Ç–µ trigger change <ID —Ç—Ä–∏–≥–≥–µ—Ä–∞> <—Ç–∏–ø –ø–æ–ª—è> <–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ>, —á—Ç–æ–±—ã " +
                "–∏–∑–º–µ–Ω–∏—Ç—å –æ–¥–∏–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç—Ä–∏–≥–≥–µ—Ä–∞.\n"
                "–¢–∏–ø—ã –ø–æ–ª–µ–π:\n" +
                "type - —Ç–∏–ø —Ç—Ä–∏–≥–≥–µ—Ä–∞ –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä—É –µ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è\n" +
                "text - —Ç–µ–∫—Å—Ç —Ç—Ä–∏–≥–≥–µ—Ä–∞\n" +
                "reaction - –æ—Ç–≤–µ—Ç –Ω–∞ —Ç—Ä–∏–≥–≥–µ—Ä\n" +
                "ID —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—é –ª–µ–≥—á–µ —É–±—Ä–∞—Ç—å —ç—Ç—É "
                "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, —á–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ ID —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç.\n" +
                "–ó–Ω–∞—á–µ–Ω–∏–µ –≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ –≤ –∫–∞–≤—ã—á–∫–∏ –Ω–µ –≤–ø–∏—Å—ã–≤–∞–π—Ç–µ, –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —è –≤—Å—ë-—Ç–∞–∫–∏ –ø–æ–π–º—É."
            )
        else:
            try:
                _, _, trigger_ID, trigger_field, *trigger_value = msg_text.split()
            except ValueError:
                await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–π")
            else:
                try:
                    if int(trigger_ID) not in list(map(lambda x: int(x["id"]), triggers)):
                        await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: " +
                                                   f"–¢—Ä–∏–≥–≥–µ—Ä–∞ —Å ID {trigger_ID} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    elif trigger_field.lower() not in ["type", "text", "reaction"]:
                        await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: " +
                                                   f"–ü–æ–ª—è {trigger_field.lower()} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    else:
                        trigger = list(filter(
                            lambda x: int(x["id"]) == int(trigger_ID), triggers))[0]
                        index = triggers.index(trigger)
                        triggers[index][f"trigger{trigger_field.title()}"] = \
                            " ".join(trigger_value).replace('\\n', '\n') \
                            if trigger_field == "reaction" else \
                            " ".join(trigger_value).lower().replace('\\n', '\n')
                        update_triggers()
                        await message.channel.send("–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω")
                except ValueError:
                    await message.channel.send("–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ ID —Ç—Ä–∏–≥–≥–µ—Ä–∞ —á—Ç–æ —É–≥–æ–¥–Ω–æ, " +
                                               "–Ω–æ –Ω–µ ID —Ç—Ä–∏–≥–≥–µ—Ä–∞")
    elif msg_text.lower().startswith("trigger delete"):
        message_words = msg_text.lower().split()
        if message_words[2] == "help":
            await message.channel.send(
                "–í–≤–µ–¥–∏—Ç–µ trigger delete <ID —Ç—Ä–∏–≥–≥–µ—Ä–∞>, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä —Å —ç—Ç–∏–º ID.\n" +
                "–ö—Ä–æ–º–µ ID, –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ."
            )
        else:
            try:
                _, _, trigger_ID = msg_text.split()
            except ValueError:
                await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π")
            else:
                try:
                    if int(trigger_ID) not in list(map(lambda x: int(x["id"]), triggers)):
                        await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: " +
                                                   f"–¢—Ä–∏–≥–≥–µ—Ä–∞ —Å ID {trigger_ID} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    else:
                        trigger = list(filter(
                            lambda x: int(x["id"]) == int(trigger_ID), triggers))[0]
                        triggers.remove(trigger)
                        triggerID = max(map(lambda x: int(x["id"]), triggers)) if triggers else -1
                        update_triggers()

                        await message.channel.send("–¢—Ä–∏–≥–≥–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                except ValueError:
                    await message.channel.send("–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ ID —Ç—Ä–∏–≥–≥–µ—Ä–∞ —á—Ç–æ —É–≥–æ–¥–Ω–æ, " +
                                               "–Ω–æ –Ω–µ ID —Ç—Ä–∏–≥–≥–µ—Ä–∞")
    elif msg_text.lower() == "trigger list":
        with open("triggers.txt", "w") as file:
            for trigger in triggers:
                file.write(
                    f"{trigger['id'].ljust(8, ' ')}{trigger['triggerType'].ljust(12, ' ')}" +
                    f"{trigger['triggerText']}\n"
                )
        await message.channel.send("–í—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ. –†–µ–∞–∫—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã –≤ " +
                                   "—Ü–µ–ª—è—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ç—Ä–∏–≥–∏",
                                   file=discord.File("triggers.txt"))
    elif msg_text.lower() == "trigger list advanced":
        if str(message.channel.id) == "1033521710881841223" and \
                str(message.author.id) in ("743132856175296565", "506753799352745984"):
            await message.channel.send("–í—Å–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ. " +
                                       "(–û–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –∏ –∞–¥–º–∏–Ω—É)",
                                       file=discord.File("triggers.csv"))
        else:
            await message.channel.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    elif msg_text.lower().startswith("bio"):
        if msg_text.lower() == "bio":
            await send_bio(message.channel, message.author)
        elif len(msg_text.split()) == 2:
            mention = msg_text.split()[1]
            if mention.startswith("<@") and mention.endswith(">"):
                user_id = mention[2:-1]
                index = getRecordIndex(user_id)
                if index != -1:
                    member = members_list[index]
                    await send_bio(message.channel, member)
                else:
                    await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
        elif msg_text.lower().startswith("bio edit"):
            if msg_text.lower() == "bio edit help":
                await message.channel.send(
                    "–í–≤–µ–¥–∏—Ç–µ\nbio edit\n<–æ–ø–∏—Å–∞–Ω–∏–µ>\n—á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–µ–±–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏.")
            else:
                _, *desc = msg_text.split("\n")
                if desc:
                    description = "\n".join(desc)
                    stats_total[getRecordIndex(message.author.id)]["description"] = description
                    update_stats()
                    await message.channel.send("–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
                else:
                    await message.channel.send("–û—Ç—Å—É—Ç—Å–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ")
        elif msg_text.lower().startswith("bio award"):
            if msg_text.lower() == "bio award help":
                await message.channel.send(
                    "–í–≤–µ–¥–∏—Ç–µ bio award <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–Ω–∞–≥—Ä–∞–¥–∞>, —á—Ç–æ–±—ã –Ω–∞–≥—Ä–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n" +
                    "–ù–∞–≥—Ä–∞–¥—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
                )
            else:
                _, _, mention, *reward_name = msg_text.split()
                if mention.startswith("<@") and mention.endswith(">"):
                    user_id = mention[2:-1]
                    index = getRecordIndex(user_id)
                    member = members_list[index]
                    if member == message.author:
                        await message.channel.send("–ù–µ–ª—å–∑—è –Ω–∞–≥—Ä–∞–∂–¥–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è")
                    elif index != -1:
                        rewards = stats_total[index]["awards"]
                        if rewards:
                            rewards += "\n"
                        reward = f':star: {" ".join(reward_name)}'
                        rewards += reward
                        stats_total[index]["awards"] = rewards
                        await message.channel.send(f"<@{user_id}> –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É:\n{reward}")
                    else:
                        await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
        elif msg_text.lower().startswith("bio revoke"):
            if msg_text.lower() == "bio revoke help":
                await message.channel.send(
                    "–í–≤–µ–¥–∏—Ç–µ bio revoke <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <ID –Ω–∞–≥—Ä–∞–¥—ã>, —á—Ç–æ–±—ã –æ—Ç–æ–∑–≤–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É —É " +
                    "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n" +
                    "–ù–∞–≥—Ä–∞–¥—ã –Ω—É–º–µ—Ä—É—é—Ç—Å—è —Å –Ω—É–ª—è, —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑."
                )
            else:
                _, _, mention, reward_id = msg_text.split()
                if mention.startswith("<@") and mention.endswith(">"):
                    user_id = mention[2:-1]
                    index = getRecordIndex(user_id)
                    member = members_list[index]
                    if member == message.author:
                        await message.channel.send("–ù–µ–ª—å–∑—è –æ—Ç–±–∏—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã —É —Å–∞–º–æ–≥–æ —Å–µ–±—è")
                    elif index != -1:
                        try:
                            rewards = stats_total[index]["awards"]
                            r = rewards.split("\n")
                            reward = r[int(reward_id)]
                            del r[int(reward_id)]
                            stats_total[index]["awards"] = "\n".join(r)
                            await message.channel.send(f"–ù–∞–≥—Ä–∞–¥–∞ {reward} –æ—Ç–æ–∑–≤–∞–Ω–∞ —É <@{user_id}>")
                        except ValueError:
                            await message.channel.send("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ ID –Ω–∞–≥—Ä–∞–¥—ã")
                    else:
                        await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
    elif msg_text.lower().startswith("stats"):
        if msg_text.lower() == "stats":
            await send_stats(message.channel, message.author)
        elif msg_text.lower() == "stats all":
            stats_width1 = 40
            stats_width2 = 20
            stats_width3 = 20
            stats_width4 = 30
            stats_string = "```" + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å".ljust(stats_width1, " ") + \
                           "–°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –¥–µ–Ω—å".ljust(stats_width2, " ") + \
                           "–°–∏–º–≤–æ–ª–æ–≤ –∑–∞ –¥–µ–Ω—å".ljust(stats_width3, " ") + \
                           "–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å".ljust(stats_width4, " ") + "\n"
            for i, stats in enumerate(stats_total):
                member = members_list[i]
                stats_string += (
                    member.nick if member.nick else member.name).ljust(stats_width1, " ")
                stats_string += str(stats["dailyMessages"]).ljust(stats_width2, " ")
                stats_string += str(stats["dailySymbols"]).ljust(stats_width3, " ")
                stats_string += str(stats["lastActive"]).ljust(stats_width4, " ")
                stats_string += "\n"
            stats_string += "```"
            await message.channel.send(stats_string)
        elif len(msg_text.split()) == 2:
            mention = msg_text.split()[1]
            if mention.startswith("<@") and mention.endswith(">"):
                user_id = mention[2:-1]
                index = getRecordIndex(user_id)
                if index != -1:
                    member = members_list[index]
                    await send_stats(message.channel, member)
                else:
                    await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
    elif msg_text.lower().startswith("tc create"):
        try:
            _, _, *words = msg_text.split()
            name = " ".join(words)
            tc = await guild.create_text_channel(name=f"üîê‚îÉ{name}", category=text_category)
            role1 = discord.utils.get(guild.roles, name="–ñ–æ–ø–æ—á–∏—Ç–∞—Ç–µ–ª—å")
            role2 = discord.utils.get(guild.roles, name="–ü–æ–¥—Å–æ—Å")
            await tc.set_permissions(role1, read_messages=False, send_messages=False)
            await tc.set_permissions(role2, read_messages=False, send_messages=False)
            await tc.set_permissions(message.author, read_messages=True, send_messages=True)
            await tc.set_permissions(
                discord.utils.get(guild.members, id=client.user.id),
                read_messages=True, send_messages=True
            )
            await tc.send(
                f"<@{message.author.id}>, –≤—ã —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª.\n" +
                "–°—é–¥–∞ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ª—é–¥–µ–π –∏ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–∏–º–∏ –≤–¥–∞–ª–∏ –æ—Ç –º–∏—Ä—Å–∫–æ–π —Å—É–µ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞.\n" +
                "–ö–æ–≥–¥–∞ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ tc delete –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.\n" +
                "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
        except ValueError:
            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
    elif msg_text.lower() == "tc delete":
        if message.channel.name.startswith("üîê") and \
                discord.utils.get(text_category.channels, name=message.channel.name):
            await message.channel.delete()
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    elif msg_text.lower().startswith("tc permit"):
        if message.channel.name.startswith("üîê"):
            _, _, *words = msg_text.split()
            name = " ".join(words)
            member = discord.utils.get(guild.members, nick=name)
            if not member:
                member = discord.utils.get(guild.members, name=name)
            if not member:
                await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await message.channel.set_permissions(member, read_messages=True, send_messages=True)
            await message.channel.send(f"<@{member.id}> —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª")
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    elif msg_text.lower().startswith("tc kick"):
        if message.channel.name.startswith("üîê"):
            _, _, *words = msg_text.split()
            name = " ".join(words)
            member = discord.utils.get(guild.members, nick=name)
            if not member:
                member = discord.utils.get(guild.members, name=name)
            if not member:
                await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await message.channel.set_permissions(member, read_messages=False, send_messages=False)
            await message.channel.send(f"<@{member.id}> –∏–∑–≥–Ω–∞–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞")
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    elif msg_text.lower().startswith("vc create"):
        try:
            _, _, *words = msg_text.split()
            name = " ".join(words)
            vc = await guild.create_voice_channel(name=f"üîê‚îÉ{name}", category=voice_category)
            role1 = discord.utils.get(guild.roles, name="–ñ–æ–ø–æ—á–∏—Ç–∞—Ç–µ–ª—å")
            role2 = discord.utils.get(guild.roles, name="–ü–æ–¥—Å–æ—Å")
            await vc.set_permissions(role1, read_messages=False, send_messages=False)
            await vc.set_permissions(role2, read_messages=False, send_messages=False)
            await vc.set_permissions(message.author, read_messages=True, send_messages=True)
            await vc.set_permissions(
                discord.utils.get(guild.members, id=client.user.id),
                read_messages=True, send_messages=True
            )
            await vc.send(
                f"<@{message.author.id}>, –≤—ã —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª.\n" +
                "–°—é–¥–∞ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ª—é–¥–µ–π –∏ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–∏–º–∏ –≤–¥–∞–ª–∏ –æ—Ç –º–∏—Ä—Å–∫–æ–π —Å—É–µ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞.\n" +
                "–ö–æ–≥–¥–∞ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ vc delete –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.\n" +
                "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
        except ValueError:
            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫–∏—Å –∫–æ–º–∞–Ω–¥—ã")
    elif msg_text.lower() == "vc delete":
        if message.channel.name.startswith("üîê") and \
                discord.utils.get(voice_category.channels, name=message.channel.name):
            await message.channel.delete()
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    elif msg_text.lower().startswith("vc permit"):
        if message.channel.name.startswith("üîê"):
            _, _, *words = msg_text.split()
            name = " ".join(words)
            member = discord.utils.get(guild.members, nick=name)
            if not member:
                member = discord.utils.get(guild.members, name=name)
            if not member:
                await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await message.channel.set_permissions(member, read_messages=True, send_messages=True)
            await message.channel.send(f"<@{member.id}> —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –≤ –∫–∞–Ω–∞–ª")
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    elif msg_text.lower().startswith("vc kick"):
        if message.channel.name.startswith("üîê"):
            _, _, *words = msg_text.split()
            name = " ".join(words)
            member = discord.utils.get(guild.members, nick=name)
            if not member:
                member = discord.utils.get(guild.members, name=name)
            if not member:
                await message.channel.send("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await message.channel.set_permissions(member, read_messages=False, send_messages=False)
            await message.channel.send(f"<@{member.id}> –∏–∑–≥–Ω–∞–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞")
        else:
            await message.channel.send("–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –Ω–µ –≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏")
    else:
        try:
            reactions = []
            mention = ""
            for trigger in triggers:
                reaction = trigger["triggerReaction"]
                text = trigger["triggerText"]
                msg = msg_text.lower()
                if "@@" in trigger["triggerText"]:
                    try:
                        index1 = msg.index("<")
                        index2 = msg.index(">") + 1
                        mention = msg[index1:index2]
                        msg = f"{msg[:index1]}@@{msg[index2:]}"
                    except ValueError:
                        continue
                if trigger["triggerType"] == "equals" and msg == text:
                    reactions.append(reaction)
                elif trigger["triggerType"] == "startswith" and msg.startswith(text):
                    reactions.append(reaction)
                elif trigger["triggerType"] == "endswith" and msg.endswith(text):
                    reactions.append(reaction)
                elif trigger["triggerType"] == "contains" and text in msg.lower():
                    reactions.append(reaction)
            reactions = list(map(
                lambda x: x.replace("@sender", f"<@{message.author.id}>"), reactions
            ))
            if mention:
                reactions = list(map(
                    lambda x: x.replace("@recipient", mention), reactions
                ))
            if reactions:
                await message.channel.send(random.choice(reactions))
        except discord.Forbidden:
            pass


if __name__ == "__main__":
    client.run(token)
